.row {
  max-width: $grid-width;
  margin: 0 auto;

  // standard is to use 1140px grid, so need to divide by 10 to get rem value (reset of page defaults)
  // margin : 0 auto -> to center block elements in another block element
  // not pseudo class selects everything except the not(element)

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;

  [class^="col-"] {
    float: left;
    // NEED FLOAT LEFT to make grid work!

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }

    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }
  // the above selects elements with the attribute class which begins with col-
  // this means a new class of col DOES NOT need to be added to all col elements
  // ^= = begins with, *= = contains, $= = ends with

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
    // using sass variables in calc function requires #{$variable}
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }

}

